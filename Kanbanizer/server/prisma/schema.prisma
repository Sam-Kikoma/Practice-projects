// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"

}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       Int    @id @default(autoincrement())
  email    String @unique
  username String @unique
  password String
  
  // Relations
  tasks         Task[]
  ownedBoards   Board[] @relation("BoardOwner")
  memberBoards  Board[] @relation("BoardMembers")
}

model Task {
  id          Int        @id @default(autoincrement())
  title       String
  description String?
  status      TaskStatus @default(CREATED)
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
  
  // Relations
  userId      Int
  user        User  @relation(fields: [userId], references: [id], onDelete: Cascade)
  boardId     Int?
  board       Board? @relation(fields: [boardId], references: [id], onDelete: Cascade)
}

model Board {
  id        Int    @id @default(autoincrement())
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  // Relations
  ownerId   Int
  owner     User   @relation("BoardOwner", fields: [ownerId], references: [id], onDelete: Cascade)
  members   User[] @relation("BoardMembers")
  tasks     Task[]
}

enum TaskStatus {
  CREATED
  IN_PROGRESS
  COMPLETE
}